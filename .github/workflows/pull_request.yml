name: On pull request

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  pr_analysis:
    name: PR Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v3.4.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          subjectPattern: ^(?![A-Z]).+$

      - name: Fetch git history
        run: git fetch --prune --unshallow

      - name: Read .nvmrc
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        id: nvm

      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup sonar-scanner
        uses: warchant/setup-sonar-scanner@v3

      - name: Dependencies
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run lint
        run: npm run lint

      - name: Setup Test Dependencies
        run: |
          docker-compose up -d

      - name: Tests
        run: |
          npm test

      - name: SonarQube
        run: sonar-scanner
          -Dsonar.host.url=https://sonarqube.skore.dev
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
          -Dsonar.login=${{ secrets.SONARQUBE_KEY }}
          -Dsonar.projectKey=${{ github.event.repository.name }}
          -Dsonar.sources=src
          -Dsonar.tests=test
          -Dsonar.test.inclusions='test/**/*.test.ts'
          -Dsonar.coverage.exclusions='**/*index.ts,**/*.module.ts,main.ts,**/*.dto.ts,**/*.test.ts'
          -Dsonar.cpd.exclusions='**/*.test.ts'
          -Dsonar.testExecutionReportPaths=test-reporter.xml
          -Dsonar.pullrequest.key=${{ github.event.number }}
          -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
          -Dsonar.pullrequest.base=develop
          -Dsonar.scm.revision=${{ github.event.pull_request.head.sha }}
